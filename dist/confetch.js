var confetch;(()=>{var e={153:e=>{e.exports=(e={})=>{try{const{method:r,headers:t,body:o,mode:s,credentials:a,cache:n,redirect:u,referrer:i,integrity:c,...l}=e,{url:d,timeoutDuration:m,...g}=l;Object.keys(g).length>0&&console.log("Custom fetch: Ignoring unsupported options:",g);const h={method:r,headers:t,body:o,mode:s,credentials:a,cache:n,redirect:u,referrer:i,integrity:c},b={};return b.controller=new AbortController,h.signal=b.controller.signal,b.request=new Request(d,h),b.timeout=null,b.abort=()=>new Promise((e=>{b.timeout&&clearTimeout(b.timeout),b.controller.signal.aborted||b.controller.abort(),e(b.controller.signal.aborted)})),b.send=()=>(b.timeout=setTimeout((()=>{b.controller.abort()}),m),window.fetch(b.request)),b}catch(e){throw console.log("Error:",e),Error("Could not initialise the fetch: ",e.message)}}},307:e=>{let r={400:"INCORRECT_REQUEST_FORMAT",401:"INVALID_SESSION",403:"FORBIDDEN",404:"RESOURCE_NOT_FOUND",408:"REQUEST_TIMED_OUT"};e.exports={buildResponseHandler:(e={})=>t=>{const o={...r,...e};if(t?.ok)return t.json();if(t&&t.status&&o[t.status])throw Error(o[t.status]);throw Error("REQUEST_TIMED_OUT")},configureStatusCodeBasedErrors:(e={})=>{r={...r,...e}}}},138:(e,r,t)=>{const{customFetch:o}=t(624),s=t(92),a={debug:!1,requestParams:{headers:{"Content-Type":"application/json"},timeoutDuration:3e3}};e.exports={confetch:e=>{const r=s.merge({},a.requestParams,e);return o(r)},configureConfetch:({baseUrl:e,headers:r,timeoutDuration:t,debug:o})=>{a.debug=!!o||a.debug,a.baseUrl=e||a.baseUrl,a.requestParams.timeoutDuration=t||a.requestParams.timeoutDuration,a.requestParams.headers=r||a.requestParams.headers},configure:({baseUrl:e,headers:r,timeoutDuration:t,debug:o})=>{a.debug=!!o||a.debug,a.baseUrl=e||a.baseUrl,a.requestParams.timeoutDuration=t||a.requestParams.timeoutDuration,a.requestParams.headers=r||a.requestParams.headers},getConfetchConfiguration:()=>({...a}),getCurrentGlobalConfiguration:()=>({...a}),utils:t(624),handlers:t(307)}},256:e=>{e.exports=e=>{if(!config.baseUrl)throw Error("Incomplete configuration: Base url not specified or is not valid. config.urlBase:",config.urlBase);return`${config.baseUrl}${e||""}`}},624:(e,r,t)=>{e.exports={getUrlFromPath:t(256),customFetch:t(153)}},92:e=>{"use strict";e.exports=void 0}},r={},t=function t(o){var s=r[o];if(void 0!==s)return s.exports;var a=r[o]={exports:{}};return e[o](a,a.exports,t),a.exports}(138);confetch=t})();