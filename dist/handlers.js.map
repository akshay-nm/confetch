{"version":3,"file":"handlers.js","sources":["../src/handlers/index.js"],"sourcesContent":["/**\r\n * @module handlers\r\n */\r\n\r\nlet defaultStatusCodes = {\r\n  400: 'INCORRECT_REQUEST_FORMAT',\r\n  401: 'INVALID_SESSION',\r\n  403: 'FORBIDDEN',\r\n  404: 'RESOURCE_NOT_FOUND',\r\n  408: 'REQUEST_TIMED_OUT',\r\n}\r\n\r\n/**\r\n * Configure status code based errors for all responseHandlers\r\n * @param {object} statusCodes\r\n */\r\nconst configureStatusCodeBasedErrors = (statusCodes = {}) => {\r\n  defaultStatusCodes = {\r\n    ...defaultStatusCodes,\r\n    ...statusCodes,\r\n  }\r\n}\r\n\r\n/**\r\n * Create an responseHandler with statusCodes (optional, will merge)\r\n * @param {object} statusCodes\r\n * @returns {function} errorHandler\r\n */\r\nconst buildResponseHandler = (statusCodes = {}) => (response) => {\r\n  const requestStatusCodes = {\r\n    ...defaultStatusCodes,\r\n    ...statusCodes,\r\n  }\r\n  if (response) {\r\n    if (response.ok) return response.json()\r\n    if (requestStatusCodes[response.status]) throw Error(requestStatusCodes[response.status])\r\n    throw Error(`${response.status}`)\r\n  } else {\r\n    throw Error('REQUEST_TIMED_OUT')\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  buildResponseHandler,\r\n  configureStatusCodeBasedErrors,\r\n}\r\n"],"names":["defaultStatusCodes","buildResponseHandler","statusCodes","response","requestStatusCodes","ok","json","status","Error","configureStatusCodeBasedErrors"],"mappings":"qCAIA,IAAIA,EAAqB,KAClB,+BACA,sBACA,gBACA,yBACA,2BAiCU,CACfC,qBAf2B,CAACC,EAAc,KAAQC,QAC5CC,EAAqB,IACtBJ,KACAE,MAEDC,EAAU,IACRA,EAASE,GAAI,OAAOF,EAASG,UAC7BF,EAAmBD,EAASI,QAAS,MAAMC,MAAMJ,EAAmBD,EAASI,eAC3EC,SAASL,EAASI,gBAElBC,MAAM,sBAMdC,+BA5BqC,CAACP,EAAc,MACpDF,EAAqB,IAChBA,KACAE"}